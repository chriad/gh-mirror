pdf_DATA = py2guile.pdf

# sources needed by emacs org-mode
# it seems that these have to be repeated in AC_CONFIG_LINKS in configure.ac so they are available in make distcheck
# if there is a better way to access these, please tell me!
dist_pkgdata_DATA = green_tree_python-flickr-author-msvg-michael_gil-license-cc_by-800x600.jpg green_tree_python-flickr-author-msvg-michael_gil-license-cc_by-and-guile-gnu-goatee-gnu-author-martin-grabmueller-license-gplv3-or-later-800x600.jpg green_tree_python-flickr-author-msvg-michael_gil-license-cc_by-4533044418_707b0029b2_o-and-guile-gnu-goatee-by-martin-grabmueller-license-gplv3-or-later-unified-resynth.jpg guile-gnu-goatee.jpg gpl.tex
py2guile = py2guile.org
authors = AUTHORS AUTHORS.in

EXTRA_DIST = ${dist_pkgdata_DATA} ${py2guile} ${authors} nagware.tex htmlize.el wisp-mode.el # ${pdf_DATA}
MOSTLYCLEANFILES = *~ *.bak *_flymake.* \\\#* # kill editor backups and flymake stuff
CLEANFILES = ${pdf_DATA} $(foreach var,tex bbl blg aux html mobi zip epub,$(basename ${pdf_DATA}).$(var)) gpl.org
DISTCLEANFILES = _minted-py2guile/*

all : py2guile.zip

py2guile.zip : py2guile.pdf py2guile.epub py2guile.mobi
	zip -9 $@ $^

py2guile.epub : py2guile.html
	@ebookconvert@ $< $@   --title "Going from Python to Guile Scheme \\ A natural progression"  --no-default-epub-cover  --pretty-print --language english

# mobi uses a shorter title because its title is ugly by default
py2guile.mobi : py2guile.html
	@ebookconvert@ $< $@   --title "Going from Python to Guile Scheme \\ A natural progression" --remove-first-image --cover green_tree_python-flickr-author-msvg-michael_gil-license-cc_by-and-guile-gnu-goatee-gnu-author-martin-grabmueller-license-gplv3-or-later-800x600.jpg  --pretty-print  --language english

py2guile-title.pdf : py2guile-title.tex
	pdflatex -shell-escape -interaction nonstopmode $<

nagware.pdf : nagware.tex green_tree_python-flickr-author-msvg-michael_gil-license-cc_by-4533044418_707b0029b2_o-and-guile-gnu-goatee-by-martin-grabmueller-license-gplv3-or-later-unified-resynth.jpg
	pdflatex $<

# http://www.reddit.com/r/emacs/comments/dy9yt/anyone_know_of_a_script_that_i_can_feed_an/
# http://blog.nguyenvq.com/2010/10/30/bash-batch-script-to-convert-org-mode-file-to-html/comment-page-1/#comment-27013
# since org-mode cannot create a file in a builddir, I have to copy over the sourcefiles and delete them afterwards.
py2guile.pdf : ${py2guile} ${dist_pkgdata_DATA} gpl.org nagware.pdf
	echo yes | @emacs@ --batch --visit $< --funcall org-latex-export-to-pdf

gpl.org : gpl.tex
	pandoc $< -o $@

# no batch mode for html export, otherwise we get no pretty colors. TODO: make font-lock work better with batch mode.
py2guile.html : ${py2guile} ${dist_pkgdata_DATA} htmlize.el wisp-mode.el
	echo yes | @emacs@ --visit $< --funcall org-html-export-to-html --funcall kill-emacs

ChangeLog :
	hg log --style changelog > $@

AUTHORS : AUTHORS.in
	cp AUTHORS.in $@; echo "Authors (autogenerated, see Makefile.am)" >> $@; $(foreach f,$(shell hg manifest),echo >> $@; echo '*' $(f) >> $@; COLUMNS=78 hg --config=extensions.churn= churn $(f) >> $@;)

# download htmlize.
htmlize.el :
	wget -O $@ http://fly.srk.fer.hr/~hniksic/emacs/htmlize.el.cgi

wisp-mode.el :
	wget -O $@ --no-check-certificate https://marmalade-repo.org/packages/wisp-mode-0.2.1.el
